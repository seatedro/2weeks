@import url("https://fonts.googleapis.com/css2?family=Geist+Mono&display=swap");
@tailwind base;
@tailwind components;
@tailwind utilities;
@layer base {
    :root {
        --background: 0 0% 100%;
        --foreground: 0 0% 3.9%;
        --card: 0 0% 100%;
        --card-foreground: 0 0% 3.9%;
        --popover: 0 0% 100%;
        --popover-foreground: 0 0% 3.9%;
        --primary: 0 0% 9%;
        --primary-foreground: 0 0% 98%;
        --secondary: 0 0% 96.1%;
        --secondary-foreground: 0 0% 9%;
        --muted: 0 0% 96.1%;
        --muted-foreground: 0 0% 45.1%;
        --accent: 0 0% 96.1%;
        --accent-foreground: 0 0% 9%;
        --destructive: 0 84.2% 60.2%;
        --destructive-foreground: 0 0% 98%;
        --border: 0 0% 89.8%;
        --input: 0 0% 89.8%;
        --ring: 0 0% 3.9%;
        --chart-1: 12 76% 61%;
        --chart-2: 173 58% 39%;
        --chart-3: 197 37% 24%;
        --chart-4: 43 74% 66%;
        --chart-5: 27 87% 67%;
        --radius: 0.5rem;
    }
    .dark {
        --background: 0 0% 3.9%;
        --foreground: 0 0% 98%;
        --card: 0 0% 3.9%;
        --card-foreground: 0 0% 98%;
        --popover: 0 0% 3.9%;
        --popover-foreground: 0 0% 98%;
        --primary: 0 0% 98%;
        --primary-foreground: 0 0% 9%;
        --secondary: 0 0% 14.9%;
        --secondary-foreground: 0 0% 98%;
        --muted: 0 0% 14.9%;
        --muted-foreground: 0 0% 63.9%;
        --accent: 0 0% 14.9%;
        --accent-foreground: 0 0% 98%;
        --destructive: 0 62.8% 30.6%;
        --destructive-foreground: 0 0% 98%;
        --border: 0 0% 14.9%;
        --input: 0 0% 14.9%;
        --ring: 0 0% 83.1%;
        --chart-1: 220 70% 50%;
        --chart-2: 160 60% 45%;
        --chart-3: 30 80% 55%;
        --chart-4: 280 65% 60%;
        --chart-5: 340 75% 55%;
    }
}
@layer base {
    * {
        @apply border-border;
    }
    body {
        @apply bg-background text-foreground;
    }
}

@keyframes matrix-rain {
    0% {
        transform: translateY(-100%);
    }
    100% {
        transform: translateY(100vh);
    }
}

@keyframes scan-line {
    0% {
        transform: translateY(-100%);
        background: linear-gradient(
            180deg,
            transparent 0%,
            rgba(34, 197, 94, 0.1) 50%,
            transparent 100%
        );
    }
    100% {
        transform: translateY(100%);
        background: linear-gradient(
            180deg,
            transparent 0%,
            rgba(34, 197, 94, 0.1) 50%,
            transparent 100%
        );
    }
}

.animate-scan-line {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    animation: scan-line 2s linear infinite;
    pointer-events: none;
}

.animate-matrix-rain {
    animation: matrix-rain 10s linear infinite;
}

.glitch {
    position: relative;
}

.glitch::before,
.glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    clip: rect(0, 900px, 0, 0);
}

.glitch::before {
    left: 2px;
    text-shadow: -1px 0 #ff00c1;
    animation: glitch-anim 2s infinite linear alternate-reverse;
}

.glitch::after {
    left: -2px;
    text-shadow: -1px 0 #00fff9;
    animation: glitch-anim 2s infinite linear alternate-reverse;
}

.typewriter {
    overflow: hidden;
    white-space: nowrap;
    animation: typing 3.5s steps(40, end);
}

@keyframes typing {
    from {
        width: 0;
    }
    to {
        width: 100%;
    }
}

@keyframes glitch-anim {
    0% {
        clip: rect(64px, 9999px, 66px, 0);
    }
    5% {
        clip: rect(30px, 9999px, 36px, 0);
    }
    10% {
        clip: rect(87px, 9999px, 95px, 0);
    }
    15% {
        clip: rect(56px, 9999px, 59px, 0);
    }
    20% {
        clip: rect(79px, 9999px, 83px, 0);
    }
    25% {
        clip: rect(45px, 9999px, 48px, 0);
    }
}

.glitch-effect {
    animation: glitch 0.2s ease-in-out;
}

@keyframes glitch {
    0% {
        transform: translate(0);
    }
    25% {
        transform: translate(-2px, 2px);
    }
    50% {
        transform: translate(2px, -2px);
    }
    75% {
        transform: translate(-2px, -2px);
    }
    100% {
        transform: translate(0);
    }
}

.power-saving {
    opacity: 0.3;
    /* transition: opacity 0.3s ease-in-out; */
}

.power-saving:hover {
    opacity: 1;
}

@keyframes glitch-animation {
    0% {
        transform: translateX(-100%);
    }
    100% {
        transform: translateX(100%);
    }
}

.debug-line {
    animation: type 0.5s steps(60, end);
}

@keyframes type {
    from {
        width: 0;
    }
    to {
        width: 100%;
    }
}

.topic-module .animate-scan-line {
    display: none;
}

.hyperlearning-mode {
    animation: hyperlearning-pulse 4s;
}

@keyframes hyperlearning-pulse {
    0%,
    100% {
        filter: none;
    }
    50% {
        filter: hue-rotate(45deg) brightness(1.2);
    }
}

body {
    overflow: hidden; /* Prevent scrollbars during effects */
}

/* Debug mode styles */
.debug-mode {
    outline: 1px solid rgba(0, 255, 0, 0.2);
}

#__next {
    height: 100%;
    min-height: 100vh;
    overflow: auto;
}

.shiki {
    background: transparent !important;
    padding: 0 !important;
    margin: 0 !important;
}

.scrollbar-container {
    isolation: isolate;
}

/* Force scrollbar to stay on top with higher z-index */
::-webkit-scrollbar {
    width: 12px;
    height: 12px;
    z-index: 9999;
}

::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.3);
    z-index: 9999;
}

::-webkit-scrollbar-thumb {
    background: rgba(74, 222, 128, 0.3);
    border: 2px solid rgba(0, 0, 0, 0.2);
    border-radius: 6px;
    z-index: 9999;
}

::-webkit-scrollbar-thumb:hover {
    background: rgba(74, 222, 128, 0.5);
}

/* Add these to ensure proper layering */
.matrix-container {
    z-index: 1;
}

.content-container {
    position: relative;
    z-index: 2;
}

.shiki::-webkit-scrollbar {
    height: 4px;
}

.shiki::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.2);
}

.shiki::-webkit-scrollbar-thumb {
    background: rgba(74, 222, 128, 0.2);
    border-radius: 2px;
}

.shiki::-webkit-scrollbar-thumb:hover {
    background: rgba(74, 222, 128, 0.4);
}

@keyframes scan {
    from {
        transform: translateY(-100%);
    }
    to {
        transform: translateY(100%);
    }
}

.animate-scan {
    animation: scan 4s linear infinite;
}

/* Quantum glitch effect */
.quantum-glitch {
    animation: quantum-glitch 0.5s steps(3, end) infinite;
}

@keyframes quantum-glitch {
    0% {
        opacity: 1;
        transform: translate(0);
    }
    20% {
        transform: translate(-2px, 2px);
        filter: hue-rotate(90deg);
    }
    40% {
        transform: translate(-2px, -2px);
        filter: hue-rotate(180deg);
    }
    60% {
        transform: translate(2px, 2px);
        filter: hue-rotate(270deg);
    }
    80% {
        transform: translate(2px, -2px);
        filter: hue-rotate(360deg);
    }
    100% {
        opacity: 1;
        transform: translate(0);
    }
}

/* Bankai release effect */
.bankai-release {
    animation: bankai-release 3s ease-in-out;
}

@keyframes bankai-release {
    0% {
        filter: brightness(1);
    }
    20% {
        filter: brightness(1.5) contrast(1.2);
    }
    40% {
        filter: brightness(2) contrast(1.5) hue-rotate(45deg);
    }
    60% {
        filter: brightness(2.5) contrast(2) hue-rotate(90deg);
    }
    80% {
        filter: brightness(3) contrast(2.5) hue-rotate(180deg);
    }
    90% {
        filter: brightness(2) contrast(1.5) hue-rotate(90deg);
    }
    100% {
        filter: brightness(1);
    }
}

/* Special terminal types */
.output-quantum {
    color: #00ff9d;
    text-shadow: 0 0 5px #00ff9d;
    animation: quantum-pulse 2s infinite;
}

.output-bankai {
    color: #ff3d00;
    text-shadow: 0 0 5px #ff3d00;
    animation: reiatsu-pulse 1s infinite;
}

@keyframes quantum-pulse {
    0%,
    100% {
        opacity: 1;
    }
    50% {
        opacity: 0.7;
    }
}

@keyframes reiatsu-pulse {
    0%,
    100% {
        text-shadow: 0 0 5px #ff3d00;
    }
    50% {
        text-shadow: 0 0 20px #ff3d00;
    }
}

.ascii-art {
    font-family: "Courier New", monospace;
    white-space: pre;
    line-height: 1.2;
    letter-spacing: 0;
    margin: 0;
}

/* Screen curvature effect */
.crt-curvature {
    background: radial-gradient(
        circle at center,
        transparent 50%,
        rgba(0, 0, 0, 0.2) 100%
    );
    animation: screen-warp 10s infinite;
}

.crt-content {
    animation: subtle-warp 8s ease-in-out infinite;
}

/* Degauss effect */
.degauss {
    animation: degauss 1s ease-out;
}

/* Phosphor persistence */
.phosphor {
    position: relative;
}

.phosphor::after {
    content: attr(data-text);
    position: absolute;
    left: 0;
    top: 0;
    opacity: 0.5;
    filter: blur(1px);
    animation: phosphor-fade 0.5s linear;
}

/* Enhanced vertical scan */
.crt-vertical-scan {
    background: linear-gradient(
        to right,
        transparent 20%,
        rgba(34, 197, 94, 0.1) 50%,
        transparent 80%
    );
    animation: vertical-scan 3s linear infinite;
    width: 100%;
    opacity: 0.7;
}

/* Enhanced horizontal lines */
.crt-horizontal-lines {
    background: repeating-linear-gradient(
        to bottom,
        transparent,
        transparent 2px,
        rgba(0, 0, 0, 0.1) 3px,
        rgba(0, 0, 0, 0.1) 4px
    );
    opacity: 0.8;
}

@keyframes screen-warp {
    0%,
    100% {
        transform: scale(1);
    }
    50% {
        transform: scale(0.995);
    }
}

@keyframes subtle-warp {
    0%,
    100% {
        transform: translate(0, 0) scale(1);
    }
    25% {
        transform: translate(1px, 0) scale(0.998);
    }
    75% {
        transform: translate(-1px, 0) scale(1.002);
    }
}

@keyframes phosphor-fade {
    from {
        opacity: 0.5;
    }
    to {
        opacity: 0;
    }
}

.power-flicker {
    animation: power-flicker 0.15s steps(3, end);
}

@keyframes power-flicker {
    0%,
    100% {
        opacity: 1;
        transform: scale(1);
    }
    50% {
        opacity: 0.8;
        transform: scale(0.998);
    }
    75% {
        opacity: 0.9;
        transform: scale(1.002);
    }
}

.crt-vignette {
    background: radial-gradient(
        circle at center,
        transparent 60%,
        rgba(0, 0, 0, 0.4) 100%
    );
    mix-blend-mode: multiply;
}

@keyframes vertical-scan {
    from {
        transform: translateX(-100%);
    }
    to {
        transform: translateX(100%);
    }
}

.scan-lines {
    background: linear-gradient(
        to bottom,
        transparent,
        transparent 50%,
        rgba(0, 0, 0, 0.4) 50%,
        rgba(0, 0, 0, 0.4)
    );
    background-size: 100% 4px;
    z-index: 2;
}

.crt-rgb-split {
    mix-blend-mode: screen;
    pointer-events: none;
    position: relative;
}

.crt-rgb-split::before,
.crt-rgb-split::after {
    content: "";
    position: absolute;
    inset: 0;
    pointer-events: none;
    mix-blend-mode: screen;
    animation: rgb-split 3s alternate infinite;
}

.crt-rgb-split::before {
    background: rgba(255, 0, 0, 0.15);
    transform: translate(-1.5px, 0);
}

.crt-rgb-split::after {
    background: rgba(0, 255, 255, 0.15);
    transform: translate(1.5px, 0);
}

@keyframes rgb-split {
    0% {
        transform: translate(-1.5px, 0);
    }
    100% {
        transform: translate(-2.5px, 0.5px);
    }
}

.vertical-sync {
    background: linear-gradient(
        to bottom,
        transparent 47%,
        rgba(0, 0, 0, 0.3) 48%,
        rgba(0, 0, 0, 0.3) 52%,
        transparent 53%
    );
    animation: vertical-sync 8s linear infinite;
    opacity: 0.2;
}

.glitch-container {
    position: relative;
    animation: glitch 0.2s ease-in-out infinite;
}

.glitch-offset-1 {
    transform: translate(-2px, 2px);
    opacity: 0.8;
    mix-blend-mode: screen;
}

.glitch-offset-2 {
    transform: translate(2px, -2px);
    opacity: 0.8;
    mix-blend-mode: screen;
}

@keyframes glitch {
    0% {
        transform: translate(0);
    }
    20% {
        transform: translate(-2px, 2px);
    }
    40% {
        transform: translate(-2px, -2px);
    }
    60% {
        transform: translate(2px, 2px);
    }
    80% {
        transform: translate(2px, -2px);
    }
    100% {
        transform: translate(0);
    }
}

@keyframes vertical-sync {
    0% {
        transform: translateY(-100%);
    }
    100% {
        transform: translateY(100vh);
    }
}

.typewriter {
    position: relative;
}

.typewriter::after {
    content: "";
    position: absolute;
    inset: 0;
    background: linear-gradient(
        90deg,
        transparent 0%,
        rgba(34, 197, 94, 0.2) 50%,
        transparent 100%
    );
    animation: typewriter-highlight 2s linear infinite;
}

@keyframes typewriter-highlight {
    from {
        transform: translateX(-100%);
    }
    to {
        transform: translateX(100%);
    }
}

.animate-blink {
    animation: blink 1s step-end infinite;
}

@keyframes blink {
    0%,
    100% {
        opacity: 1;
    }
    50% {
        opacity: 0;
    }
}
